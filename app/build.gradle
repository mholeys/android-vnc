apply plugin: 'com.android.application'
apply plugin: 'jacoco'

def urlFile = { url, name ->
    File file = new File("$buildDir/libs/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "uk.co.mholeys.android.vnc"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testApplicationId "uk.co.mholeys.android.vnc.test"
        testInstrumentationRunner "uk.co.mholeys.android.vnc.test.Instrumentation"
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }
    flavorDimensions "normal"
    productFlavors {
        dev {
            dimension = "normal"
            applicationId = "uk.co.mholeys.android.vnc" // Essential
        }
        production {
            dimension = "normal"
            applicationId = "uk.co.mholeys.android.vnc"
        }
    }
}

dependencies {
    //compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation urlFile("http://mholeys.co.uk/ci/artifacts/vnc/59/vnc.jar", 'vnc-59')
    //compile files('libs/vnc-35.jar')
    //Chromecast deps
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:mediarouter-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-cast-framework:11.8.0'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support:support-annotations:26.1.0'  // <-- match with the support lib version
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5@jar'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.4'

    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    testImplementation 'junit:junit:4.12'
}

// Get the path to ADB.  Required when running tests directly from Android Studio.
// Source: http://stackoverflow.com/a/26771087/112705

def adb = android.getAdbExe().toString()

// Source: http://stackoverflow.com/q/29908110/112705
afterEvaluate {
    task grantAnimationPermissionDev(type: Exec, dependsOn: 'installDevDebug') {
        commandLine "$adb shell pm grant $android.productFlavors.dev.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
    }

    task grantAnimationPermissionProduction(type: Exec, dependsOn: 'installProductionDebug') {
        commandLine "$adb shell pm grant $android.productFlavors.production.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
    }

    // When launching individual tests from Android Studio, it seems that only the assemble tasks
    // get called directly, not the install* versions
    tasks.each { task ->
        if (task.name.startsWith('assembleDevDebugAndroidTest')) {
            task.dependsOn grantAnimationPermissionDev
        } else if (task.name.startsWith('assembleProductionDebugAndroidTest')) {
            task.dependsOn grantAnimationPermissionProduction
        }
    }
}

task fetchScreenshots(type: Exec) {
    commandLine "$adb pull /storage/emulated/0/screenshots $buildDir/screenshots/".split(' ')
}